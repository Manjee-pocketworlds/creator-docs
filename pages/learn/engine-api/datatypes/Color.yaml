name: Color
type: datatypes
summary: |
  The Color datatype in Unity represents a color as a combination of red, green, blue, and optionally, alpha components. A Color can be used wherever a color property is required to define in Unity, whether it's for setting the background color of the scene, or to set the color of an object material. Get the full details on [official Unity Color documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color.html).
description:
code_samples:
inherits:
constructors:
  - name: new
    summary: |
      The 'new' constructor creates a new Color by defining the red, green, and blue (RGB) channels. You can dive into the [Unity Color.new documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-ctor.html) for further details.
    description:
    is_static: false
    code_samples:
    parameters:
      - name: r
        type: number
        default:
        summary: The red component of the color.
      - name: g
        type: number
        default:
        summary: The green component of the color.
      - name: b
        type: number
        default:
        summary: The blue component of the color.
    returns:
      - type: DataType.Color
        summary: Returns a new Color with the given red, green, and blue components.
properties:
  - name: grayscale
    summary: |
      The 'grayscale' property calculates the grayscale equivalent of the color. It considers the color's perceptual luminance. To know more, check the [Unity Color.grayscale documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-grayscale.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: linear
    summary: |
      The 'linear' property returns a linear (gamma-free) version of the color. The color's components are assumed to be in the Gamma space, so the alpha value remains the same. Head to the [Unity Color.linear documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-linear.html) for more insights.
    description:
    is_static: false
    code_samples:
    type: DataType.Color
  - name: gamma
    summary: |
      The 'gamma' property gets a gamma-adjusted version of the color, allowing for correct rendering on devices with different gamma values. The alpha value is not changed. To learn more, refer to the [Unity Color.gamma documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-gamma.html).
    description:
    is_static: false
    code_samples:
    type: DataType.Color
  - name: maxColorComponent
    summary: |
      The `maxColorComponent' property retrieves the maximum of the color's red, green, and blue components. It is useful when wanting to know the 'brightness' or the most dominant channel of the color. You can learn more on the [Unity Color.maxColorComponent documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-maxColorComponent.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: r
    summary: |
      The 'r' property represents the red component of the color. Reducing its value would make the color more cyan, while incrementing it would make the color more red. Refer to the [Unity Color.r documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-r.html) for additional details.
    description:
    is_static: false
    code_samples:
    type: number
  - name: g
    summary: |
      The 'g' property corresponds to the green component of the color. Increase its value for a more green color while reducing it would give a more magenta color. Further information can be found in the [Unity Color.g documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-g.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: b
    summary: |
      The 'b' property holds the blue component of the color. Increasing its value would make the color more blue, whereas decreasing it would turn it more yellow. To know more, check out the [Unity Color.b documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-b.html).
    description:
    is_static: false
    code_samples:
    type: number
  - name: a
    summary: |
      The 'a' property refers to the alpha component of the color, mainly used for transparency levels where 1 means fully opaque and 0 means fully transparent. For more details, please visit the [Unity Color.a documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-a.html).
    description:
    is_static: false
    code_samples:
    type: number
methods:
  - name: Lerp
    summary: |
      The 'Lerp' (or Linear Interpolation) method blends between two colors by a t factor which goes from 0 to 1. At t=0, it returns the first color, at t=1, it returns the second color. In-between, you get a blend of both. For more details, check out the [Unity Color.Lerp documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color.Lerp.html).
    description:
    is_static: true
    code_samples:
    parameters:
      - name: a
        type: DataType.Color
        default:
        summary: The first color to blend.
      - name: b
        type: DataType.Color
        default:
        summary: The second color to blend.
      - name: t
        type: number
        default:
        summary: The blend factor.
    returns:
      - type: DataType.Color
        summary: Returns a new color that is a blend of color a and b.
  - name: LerpUnclamped
    summary: |
      The 'LerpUnclamped' method is similar to Lerp, but here the t parameter is not clamped to the range [0, 1]. Refer to the [Unity Color.LerpUnclamped documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color.LerpUnclamped.html) for more understanding.
    description:
    is_static: true
    code_samples:
    parameters:
      - name: a
        type: DataType.Color
        default:
        summary: The first color to blend.
      - name: b
        type: DataType.Color
        default:
        summary: The second color to blend.
      - name: t
        type: number
        default:
        summary: The blend factor.
    returns:
      - type: DataType.Color
        summary: Returns a new color that is a blend of color a and b.
  - name: HSVToRGB
    summary: |
      The 'HSVToRGB' method converts a color from Hue-Saturation-Value (HSV) space to Red-Green-Blue (RGB) space. This can be useful when you want to create a color wheel or similar visual representations. The [Unity Color.HSVToRGB documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color.HSVToRGB.html) provides more information.
    description:
    is_static: true
    code_samples:
    parameters:
      - name: H
        type: number
        default:
        summary: The Hue component of the color.
      - name: S
        type: number
        default:
        summary: The Saturation component of the color.
      - name: V
        type: number
        default:
        summary: The Value (brightness) component of the color.
    returns:
      - type: DataType.Color
        summary: Returns the RGB equivalent of the HSV color.
math_operations:
  - operation: '=='
    summary: |
      The '==' operation checks whether two color values (RGB and alpha) are equal or not. Read more about this in the [Unity Color.operator_eq documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-operator_eq.html).
    description:
    type_a: Color
    type_b: Color
    return_type: boolean
    code_samples:
  - operation: '/'
    summary: |
      The '/' operator divides each RGB and Alpha component of a color by a scalar number. Refer to the [Unity Color.operator_divide documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-operator_divide.html) for more details.
    description:
    type_a: Color
    type_b: number
    return_type: Color
    code_samples:
  - operation: '*'
    summary: |
      The '*' operator multiplies each RGB and alpha component of a color by a scalar number. It can also calculate the product of two colors on a component-wise basis. Refer to the [Unity Color.operator_multiply documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-operator_multiply.html) to understand it better.
    description:
    type_a: number
    type_b: Color
    return_type: Color
    code_samples:
  - operation: '-'
    summary: |
      The '-' operator subtracts the second color from the first color on a component-wise basis. To learn more, read the [Unity Color.operator_subtract documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-operator_subtract.html).
    description:
    type_a: Color
    type_b: Color
    return_type: Color
    code_samples:
  - operation: '+'
    summary: |
      The '+' operator adds two colors together on a component-wise basis - separately adding the red, green, blue, and alpha values of each color. You can find more details in the [Unity Color.operator_add documentation](https://docs.unity3d.com/2022.3/Documentation/ScriptReference/Color-operator_add.html).
    description:
    type_a: Color
    type_b: Color
    return_type: Color
    code_samples: